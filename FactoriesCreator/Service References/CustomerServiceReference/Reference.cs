//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This code was auto-generated by Microsoft.Silverlight.ServiceReference, version 5.0.61118.0
// 
namespace FactoriesCreator.CustomerServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="", ConfigurationName="CustomerServiceReference.CustomerService")]
    public interface CustomerService {
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:CustomerService/GetSqlString", ReplyAction="urn:CustomerService/GetSqlStringResponse")]
        System.IAsyncResult BeginGetSqlString(System.AsyncCallback callback, object asyncState);
        
        string EndGetSqlString(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:CustomerService/Acciones", ReplyAction="urn:CustomerService/AccionesResponse")]
        System.IAsyncResult BeginAcciones(string sqlQuery, System.AsyncCallback callback, object asyncState);
        
        string EndAcciones(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:CustomerService/Consulta", ReplyAction="urn:CustomerService/ConsultaResponse")]
        System.IAsyncResult BeginConsulta(string sqlQuery, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> EndConsulta(System.IAsyncResult result);
        
        [System.ServiceModel.OperationContractAttribute(AsyncPattern=true, Action="urn:CustomerService/Select", ReplyAction="urn:CustomerService/SelectResponse")]
        System.IAsyncResult BeginSelect(string query, System.AsyncCallback callback, object asyncState);
        
        System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> EndSelect(System.IAsyncResult result);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface CustomerServiceChannel : FactoriesCreator.CustomerServiceReference.CustomerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class GetSqlStringCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public GetSqlStringCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AccionesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public AccionesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public string Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class ConsultaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public ConsultaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class SelectCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        public SelectCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        public System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> Result {
            get {
                base.RaiseExceptionIfNecessary();
                return ((System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>>)(this.results[0]));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CustomerServiceClient : System.ServiceModel.ClientBase<FactoriesCreator.CustomerServiceReference.CustomerService>, FactoriesCreator.CustomerServiceReference.CustomerService {
        
        private BeginOperationDelegate onBeginGetSqlStringDelegate;
        
        private EndOperationDelegate onEndGetSqlStringDelegate;
        
        private System.Threading.SendOrPostCallback onGetSqlStringCompletedDelegate;
        
        private BeginOperationDelegate onBeginAccionesDelegate;
        
        private EndOperationDelegate onEndAccionesDelegate;
        
        private System.Threading.SendOrPostCallback onAccionesCompletedDelegate;
        
        private BeginOperationDelegate onBeginConsultaDelegate;
        
        private EndOperationDelegate onEndConsultaDelegate;
        
        private System.Threading.SendOrPostCallback onConsultaCompletedDelegate;
        
        private BeginOperationDelegate onBeginSelectDelegate;
        
        private EndOperationDelegate onEndSelectDelegate;
        
        private System.Threading.SendOrPostCallback onSelectCompletedDelegate;
        
        private BeginOperationDelegate onBeginOpenDelegate;
        
        private EndOperationDelegate onEndOpenDelegate;
        
        private System.Threading.SendOrPostCallback onOpenCompletedDelegate;
        
        private BeginOperationDelegate onBeginCloseDelegate;
        
        private EndOperationDelegate onEndCloseDelegate;
        
        private System.Threading.SendOrPostCallback onCloseCompletedDelegate;
        
        public CustomerServiceClient() {
        }
        
        public CustomerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CustomerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Net.CookieContainer CookieContainer {
            get {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    return httpCookieContainerManager.CookieContainer;
                }
                else {
                    return null;
                }
            }
            set {
                System.ServiceModel.Channels.IHttpCookieContainerManager httpCookieContainerManager = this.InnerChannel.GetProperty<System.ServiceModel.Channels.IHttpCookieContainerManager>();
                if ((httpCookieContainerManager != null)) {
                    httpCookieContainerManager.CookieContainer = value;
                }
                else {
                    throw new System.InvalidOperationException("Unable to set the CookieContainer. Please make sure the binding contains an HttpC" +
                            "ookieContainerBindingElement.");
                }
            }
        }
        
        public event System.EventHandler<GetSqlStringCompletedEventArgs> GetSqlStringCompleted;
        
        public event System.EventHandler<AccionesCompletedEventArgs> AccionesCompleted;
        
        public event System.EventHandler<ConsultaCompletedEventArgs> ConsultaCompleted;
        
        public event System.EventHandler<SelectCompletedEventArgs> SelectCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> OpenCompleted;
        
        public event System.EventHandler<System.ComponentModel.AsyncCompletedEventArgs> CloseCompleted;
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FactoriesCreator.CustomerServiceReference.CustomerService.BeginGetSqlString(System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginGetSqlString(callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string FactoriesCreator.CustomerServiceReference.CustomerService.EndGetSqlString(System.IAsyncResult result) {
            return base.Channel.EndGetSqlString(result);
        }
        
        private System.IAsyncResult OnBeginGetSqlString(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((FactoriesCreator.CustomerServiceReference.CustomerService)(this)).BeginGetSqlString(callback, asyncState);
        }
        
        private object[] OnEndGetSqlString(System.IAsyncResult result) {
            string retVal = ((FactoriesCreator.CustomerServiceReference.CustomerService)(this)).EndGetSqlString(result);
            return new object[] {
                    retVal};
        }
        
        private void OnGetSqlStringCompleted(object state) {
            if ((this.GetSqlStringCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.GetSqlStringCompleted(this, new GetSqlStringCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void GetSqlStringAsync() {
            this.GetSqlStringAsync(null);
        }
        
        public void GetSqlStringAsync(object userState) {
            if ((this.onBeginGetSqlStringDelegate == null)) {
                this.onBeginGetSqlStringDelegate = new BeginOperationDelegate(this.OnBeginGetSqlString);
            }
            if ((this.onEndGetSqlStringDelegate == null)) {
                this.onEndGetSqlStringDelegate = new EndOperationDelegate(this.OnEndGetSqlString);
            }
            if ((this.onGetSqlStringCompletedDelegate == null)) {
                this.onGetSqlStringCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnGetSqlStringCompleted);
            }
            base.InvokeAsync(this.onBeginGetSqlStringDelegate, null, this.onEndGetSqlStringDelegate, this.onGetSqlStringCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FactoriesCreator.CustomerServiceReference.CustomerService.BeginAcciones(string sqlQuery, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginAcciones(sqlQuery, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        string FactoriesCreator.CustomerServiceReference.CustomerService.EndAcciones(System.IAsyncResult result) {
            return base.Channel.EndAcciones(result);
        }
        
        private System.IAsyncResult OnBeginAcciones(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqlQuery = ((string)(inValues[0]));
            return ((FactoriesCreator.CustomerServiceReference.CustomerService)(this)).BeginAcciones(sqlQuery, callback, asyncState);
        }
        
        private object[] OnEndAcciones(System.IAsyncResult result) {
            string retVal = ((FactoriesCreator.CustomerServiceReference.CustomerService)(this)).EndAcciones(result);
            return new object[] {
                    retVal};
        }
        
        private void OnAccionesCompleted(object state) {
            if ((this.AccionesCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.AccionesCompleted(this, new AccionesCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void AccionesAsync(string sqlQuery) {
            this.AccionesAsync(sqlQuery, null);
        }
        
        public void AccionesAsync(string sqlQuery, object userState) {
            if ((this.onBeginAccionesDelegate == null)) {
                this.onBeginAccionesDelegate = new BeginOperationDelegate(this.OnBeginAcciones);
            }
            if ((this.onEndAccionesDelegate == null)) {
                this.onEndAccionesDelegate = new EndOperationDelegate(this.OnEndAcciones);
            }
            if ((this.onAccionesCompletedDelegate == null)) {
                this.onAccionesCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnAccionesCompleted);
            }
            base.InvokeAsync(this.onBeginAccionesDelegate, new object[] {
                        sqlQuery}, this.onEndAccionesDelegate, this.onAccionesCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FactoriesCreator.CustomerServiceReference.CustomerService.BeginConsulta(string sqlQuery, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginConsulta(sqlQuery, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> FactoriesCreator.CustomerServiceReference.CustomerService.EndConsulta(System.IAsyncResult result) {
            return base.Channel.EndConsulta(result);
        }
        
        private System.IAsyncResult OnBeginConsulta(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string sqlQuery = ((string)(inValues[0]));
            return ((FactoriesCreator.CustomerServiceReference.CustomerService)(this)).BeginConsulta(sqlQuery, callback, asyncState);
        }
        
        private object[] OnEndConsulta(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> retVal = ((FactoriesCreator.CustomerServiceReference.CustomerService)(this)).EndConsulta(result);
            return new object[] {
                    retVal};
        }
        
        private void OnConsultaCompleted(object state) {
            if ((this.ConsultaCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.ConsultaCompleted(this, new ConsultaCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void ConsultaAsync(string sqlQuery) {
            this.ConsultaAsync(sqlQuery, null);
        }
        
        public void ConsultaAsync(string sqlQuery, object userState) {
            if ((this.onBeginConsultaDelegate == null)) {
                this.onBeginConsultaDelegate = new BeginOperationDelegate(this.OnBeginConsulta);
            }
            if ((this.onEndConsultaDelegate == null)) {
                this.onEndConsultaDelegate = new EndOperationDelegate(this.OnEndConsulta);
            }
            if ((this.onConsultaCompletedDelegate == null)) {
                this.onConsultaCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnConsultaCompleted);
            }
            base.InvokeAsync(this.onBeginConsultaDelegate, new object[] {
                        sqlQuery}, this.onEndConsultaDelegate, this.onConsultaCompletedDelegate, userState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.IAsyncResult FactoriesCreator.CustomerServiceReference.CustomerService.BeginSelect(string query, System.AsyncCallback callback, object asyncState) {
            return base.Channel.BeginSelect(query, callback, asyncState);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> FactoriesCreator.CustomerServiceReference.CustomerService.EndSelect(System.IAsyncResult result) {
            return base.Channel.EndSelect(result);
        }
        
        private System.IAsyncResult OnBeginSelect(object[] inValues, System.AsyncCallback callback, object asyncState) {
            string query = ((string)(inValues[0]));
            return ((FactoriesCreator.CustomerServiceReference.CustomerService)(this)).BeginSelect(query, callback, asyncState);
        }
        
        private object[] OnEndSelect(System.IAsyncResult result) {
            System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> retVal = ((FactoriesCreator.CustomerServiceReference.CustomerService)(this)).EndSelect(result);
            return new object[] {
                    retVal};
        }
        
        private void OnSelectCompleted(object state) {
            if ((this.SelectCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.SelectCompleted(this, new SelectCompletedEventArgs(e.Results, e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void SelectAsync(string query) {
            this.SelectAsync(query, null);
        }
        
        public void SelectAsync(string query, object userState) {
            if ((this.onBeginSelectDelegate == null)) {
                this.onBeginSelectDelegate = new BeginOperationDelegate(this.OnBeginSelect);
            }
            if ((this.onEndSelectDelegate == null)) {
                this.onEndSelectDelegate = new EndOperationDelegate(this.OnEndSelect);
            }
            if ((this.onSelectCompletedDelegate == null)) {
                this.onSelectCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnSelectCompleted);
            }
            base.InvokeAsync(this.onBeginSelectDelegate, new object[] {
                        query}, this.onEndSelectDelegate, this.onSelectCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginOpen(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginOpen(callback, asyncState);
        }
        
        private object[] OnEndOpen(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndOpen(result);
            return null;
        }
        
        private void OnOpenCompleted(object state) {
            if ((this.OpenCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.OpenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void OpenAsync() {
            this.OpenAsync(null);
        }
        
        public void OpenAsync(object userState) {
            if ((this.onBeginOpenDelegate == null)) {
                this.onBeginOpenDelegate = new BeginOperationDelegate(this.OnBeginOpen);
            }
            if ((this.onEndOpenDelegate == null)) {
                this.onEndOpenDelegate = new EndOperationDelegate(this.OnEndOpen);
            }
            if ((this.onOpenCompletedDelegate == null)) {
                this.onOpenCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnOpenCompleted);
            }
            base.InvokeAsync(this.onBeginOpenDelegate, null, this.onEndOpenDelegate, this.onOpenCompletedDelegate, userState);
        }
        
        private System.IAsyncResult OnBeginClose(object[] inValues, System.AsyncCallback callback, object asyncState) {
            return ((System.ServiceModel.ICommunicationObject)(this)).BeginClose(callback, asyncState);
        }
        
        private object[] OnEndClose(System.IAsyncResult result) {
            ((System.ServiceModel.ICommunicationObject)(this)).EndClose(result);
            return null;
        }
        
        private void OnCloseCompleted(object state) {
            if ((this.CloseCompleted != null)) {
                InvokeAsyncCompletedEventArgs e = ((InvokeAsyncCompletedEventArgs)(state));
                this.CloseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(e.Error, e.Cancelled, e.UserState));
            }
        }
        
        public void CloseAsync() {
            this.CloseAsync(null);
        }
        
        public void CloseAsync(object userState) {
            if ((this.onBeginCloseDelegate == null)) {
                this.onBeginCloseDelegate = new BeginOperationDelegate(this.OnBeginClose);
            }
            if ((this.onEndCloseDelegate == null)) {
                this.onEndCloseDelegate = new EndOperationDelegate(this.OnEndClose);
            }
            if ((this.onCloseCompletedDelegate == null)) {
                this.onCloseCompletedDelegate = new System.Threading.SendOrPostCallback(this.OnCloseCompleted);
            }
            base.InvokeAsync(this.onBeginCloseDelegate, null, this.onEndCloseDelegate, this.onCloseCompletedDelegate, userState);
        }
        
        protected override FactoriesCreator.CustomerServiceReference.CustomerService CreateChannel() {
            return new CustomerServiceClientChannel(this);
        }
        
        private class CustomerServiceClientChannel : ChannelBase<FactoriesCreator.CustomerServiceReference.CustomerService>, FactoriesCreator.CustomerServiceReference.CustomerService {
            
            public CustomerServiceClientChannel(System.ServiceModel.ClientBase<FactoriesCreator.CustomerServiceReference.CustomerService> client) : 
                    base(client) {
            }
            
            public System.IAsyncResult BeginGetSqlString(System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[0];
                System.IAsyncResult _result = base.BeginInvoke("GetSqlString", _args, callback, asyncState);
                return _result;
            }
            
            public string EndGetSqlString(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("GetSqlString", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginAcciones(string sqlQuery, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sqlQuery;
                System.IAsyncResult _result = base.BeginInvoke("Acciones", _args, callback, asyncState);
                return _result;
            }
            
            public string EndAcciones(System.IAsyncResult result) {
                object[] _args = new object[0];
                string _result = ((string)(base.EndInvoke("Acciones", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginConsulta(string sqlQuery, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = sqlQuery;
                System.IAsyncResult _result = base.BeginInvoke("Consulta", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> EndConsulta(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> _result = ((System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>>)(base.EndInvoke("Consulta", _args, result)));
                return _result;
            }
            
            public System.IAsyncResult BeginSelect(string query, System.AsyncCallback callback, object asyncState) {
                object[] _args = new object[1];
                _args[0] = query;
                System.IAsyncResult _result = base.BeginInvoke("Select", _args, callback, asyncState);
                return _result;
            }
            
            public System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> EndSelect(System.IAsyncResult result) {
                object[] _args = new object[0];
                System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>> _result = ((System.Collections.ObjectModel.ObservableCollection<System.Collections.Generic.Dictionary<string, object>>)(base.EndInvoke("Select", _args, result)));
                return _result;
            }
        }
    }
}
